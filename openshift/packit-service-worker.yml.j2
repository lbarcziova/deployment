# MIT License
#
# Copyright (c) 2018-2019 Red Hat, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: packit-worker
  annotations:
    # Setting triggers to StatefulSet is tricky (they also don't appear in GUI).
    # I run the following and then checked how the resulting yaml looks like.
    # oc set triggers statefulset.apps/packit-worker --from-image=packit-worker:dev -c packit-worker-1
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"packit-worker:{{ deployment }}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"packit-worker-1\")].image"}]
spec:
  selector:
    matchLabels:
      # has to match .spec.template.metadata.labels
      name: packit-worker
      app: packit
  serviceName: "packit-worker"
  replicas: {{ worker_replicas }}
  volumeClaimTemplates:
    - metadata:
        name: packit-worker-vol
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
  updateStrategy.type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        name: packit-worker
        app: packit
      # https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#using-is-with-k8s
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: packit-ssh
          secret:
            secretName: packit-ssh
        - name: packit-secrets
          secret:
            secretName: packit-secrets
        - name: packit-config
          secret:
            secretName: packit-config
      containers:
        - name: packit-worker-1
          image: packit-worker:{{ deployment }}
          env:
            - name: DEPLOYMENT
              value: {{ deployment }}
            - name: DISTGIT_URL
              value: {{ "src.fedoraproject.org" if deployment == "prod" else "src.stg.fedoraproject.org" }}
            - name: APP
              value: packit_service.worker.tasks
            - name: REDIS_SERVICE_HOST
              value: redis
            - name: SENTRY_SECRET
              valueFrom:
                secretKeyRef:
                  name: packit-sentry
                  key: sentry
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: postgres-secret
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: postgres-secret
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: postgres-secret
          volumeMounts:
            - name: packit-ssh
              mountPath: /packit-ssh
            - name: packit-secrets
              mountPath: /secrets
            - name: packit-config
              mountPath: /home/packit/.config
            - name: packit-worker-vol
              mountPath: /sandcastle
          command:
            - "/usr/bin/run_worker.sh"
          resources:
            requests:
              memory: "256Mi"
              cpu: "400m"
            limits:
              memory: "512Mi"
              cpu: "800m"
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - "celery -A $APP status | grep $(cat /etc/hostname) | grep OK"
            initialDelaySeconds: 10
            periodSeconds: 60
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                # does this worker respond to ping?
                - 'celery -A $APP inspect ping --destination "celery@$(cat /etc/hostname)"'
            initialDelaySeconds: 10
            periodSeconds: 30
---
# https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#writing-image-stream-definitions
kind: ImageStream
apiVersion: v1
metadata:
  name: packit-worker
spec:
  tags:
    - name: {{ deployment }}
      from:
        kind: DockerImage
        name: {{ image_worker }}
      importPolicy:
        # Periodically query registry to synchronize tag and image metadata.
        scheduled: {{ auto_import_images }}
  lookupPolicy:
    # allows all resources pointing to this image stream to use it in the image field
    local: true
